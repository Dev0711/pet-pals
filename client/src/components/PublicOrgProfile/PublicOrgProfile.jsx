/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/UnOb3wiSVZg
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Archivo } from 'next/font/google'

archivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import PropTypes from "prop-types";
import { useEffect } from "react";
import PetCard from "../PetList/PetCard";
import { Button } from "../ui/button";
import { useNavigate } from "react-router-dom";

export default function PublicOrgProfile({ user }) {

    const navigate = useNavigate();

    useEffect(() => {
        console.log('user: ', user);
    }, [user]);

    return (
        <div className="bg-background text-foreground m-20 w-full">
            <header className="bg-primary text-primary-foreground py-6 px-4 md:px-6">
                <div className="container mx-auto flex items-center justify-between">
                    <div>
                        <h1 className="text-2xl font-bold">{user?.username}</h1>
                        <p className="text-sm">Helping pets find their forever homes</p>
                    </div>
                    <div>
                        <Button variant="secondary" className="hidden ml-4 md:inline-flex" onClick={() => navigate("/rehome-form", { state: { orgId: user.id } })} >
                            Re-home
                        </Button>
                        <Button variant="secondary" className="hidden ml-4 md:inline-flex" onClick={() => navigate("/funeral-form", { state: { orgId: user.id } })} >
                            Funeral
                        </Button>
                    </div>
                </div>
            </header>
            <main className="container mx-auto py-12 px-4 md:px-6">
                <section className="mb-12">
                    <h2 className="text-xl font-bold mb-4">Shelter Information</h2>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <h3 className="text-lg font-semibold mb-2">Location</h3>
                            <p className=" w-52 break-words">{user?.address || "Not Available"}</p>
                            {/* <p>Anytown, CA 12345</p> */}
                        </div>
                        <div>
                            <h3 className="text-lg font-semibold mb-2">Contact</h3>
                            <p>Phone: {user?.phoneNo || "Not Available"}</p>
                            <p>Email: {user?.email || "Not Available"}</p>
                        </div>
                        <div>
                            <h3 className="text-lg font-semibold mb-2">City and Country</h3>
                            <p>City: {user?.city || "Not Available"}</p>
                            <p>Country: {user?.country || "Not Available"}</p>
                        </div>
                    </div>
                </section>
                <section>
                    <div className="flex items-center justify-between mb-6">
                        <h2 className="text-xl font-bold">Pets Available for Adoption</h2>
                        {/* <div className="flex items-center gap-2">
                            <Label htmlFor="filter">Filter by:</Label>
                            <Select id="filter">
                                <SelectTrigger>
                                    <SelectValue placeholder="Select filter" />
                                </SelectTrigger>
                                <SelectContent>
                                    <SelectItem value="age">Age</SelectItem>
                                    <SelectItem value="breed">Breed</SelectItem>
                                    <SelectItem value="size">Size</SelectItem>
                                </SelectContent>
                            </Select>
                        </div> */}
                    </div>
                    <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
                        {user?.pet_ids && user.pet_ids.length > 0 ? (
                            user.pet_ids.map((pet) => (
                                <PetCard key={pet._id} pet={pet} />
                            ))
                        ) : (
                            <p>Sorry, no pets available for adoption at this time.</p>
                        )}

                    </div>
                </section>
            </main>
        </div>
    );
}

PublicOrgProfile.propTypes = {
    user: PropTypes.object.isRequired
};